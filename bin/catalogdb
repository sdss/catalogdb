#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# @Author: José Sánchez-Gallego (gallegoj@uw.edu)
# @Date: 2019-07-26
# @Filename: catalogdb
# @License: BSD 3-clause (http://www.opensource.org/licenses/BSD-3-Clause)
#
# @Last modified by: José Sánchez-Gallego (gallegoj@uw.edu)
# @Last modified time: 2019-07-26 20:14:41

import subprocess
import urllib.parse

import click


@click.group()
def catalogdb():
    """CLI for catalogdb tools."""

    pass


@catalogdb.command()
@click.argument('REMOTE', type=str)
@click.argument('LOCAL', type=click.Path(exists=True, file_okay=False))
@click.option('--mode', type=click.Choice(['wget'], case_sensitive=False),
              default='wget', show_default=True,
              help='the mode use to download the data.')
@click.option('--include', type=str, help='pattern of files to include.')
@click.option('--extra-options', type=str, default='',
              help="additional command line options to pass to the command.")
def download(remote, local, mode, include, extra_options):
    """Downloads files from a REMOTE to a LOCAL path."""

    parsed_url = urllib.parse.urlparse(remote)

    if mode == 'wget':

        n_cut_dirs = len(parsed_url.path.strip('/').split('/'))

        shell_cmd = ['wget', '-r', '-nH', '--no-parent',
                     f'--cut-dirs={n_cut_dirs}',
                     '--reject="index.html*"', '-P', local]

        if include:
            shell_cmd += ['-A', include]

        shell_cmd += extra_options.split()
        shell_cmd += [remote]

    command_string = ' '.join(shell_cmd)

    click.echo()
    click.echo(f'Running command ' + click.style(command_string, fg='green', bold=True))
    click.echo()

    subprocess.run(command_string, shell=True)

    click.echo()


if __name__ == '__main__':
    catalogdb()
